version: 2.1

executors:
  my-container:
    working_directory: /tmp/app
    docker:
      - image: cimg/rust:1.73.0-node

jobs:
  install-deps-and-build:
    executor: my-container
    description: Install all dependencies and build the project
    steps:
      - checkout
      - setup-target-platform-cmd
      - setup-trunk-cmd
      - build-tailwind-cmd
      - build-wasm-cmd
      - run:
          name: List the distribution build
          command: ls -al dist
      - persist_to_workspace:
          root: dist
          paths:
            - .

  deploy-to-prod:
    executor: my-container
    steps:
      - attach_workspace:
          at: ~/app/dist
      - deploy-to-prod-cmd

commands:
  setup-target-platform-cmd:
    steps:
      - run:
          name: Install Target Platform
          command: rustup target add wasm32-unknown-unknown
      - run:
          name: List Installed Targets
          command: rustup target list --installed

  setup-trunk-cmd:
    steps:
      - run:
          name: Install Trunk binary
          command: cargo install trunk
      - run:
          name: List Cargo's Installed Binaries
          command: cargo install --list

  build-tailwind-cmd:
    steps:
      - run:
          name: Build tailwindcss for production
          command: npx tailwindcss -c tailwind.config.js -i input.css  -o tailwind.css --minify
      - run:
          name: List generated output
          command: ls -al | grep "tailwind.css"

  build-wasm-cmd:
    steps:
      - run:
          name: Build Production wasm
          command: RUSTFLAGS=--cfg=web_sys_unstable_apis trunk build --release
      - run:
          name: List the output
          command: ls && ls dist

  deploy-to-prod-cmd:
    steps:
      - run: 
          name: Production Artifacts
          command: ls dist
      - run:
          name: Deploy to production
          command: git -v && gh version
      - run: 
          name: Check Github Token
          command: echo $GITHUB_TOKEN

workflows:
  build-and-deploy:
    jobs:
      - install-deps-and-build
      - deploy-to-prod:
          context: GITHUB-CONTEXT
          requires:
            - install-deps-and-build
          type: approval

